<rml>
<head>
	<title>options</title>
	<link type="text/template" href="template.rml" />
	<link rel="stylesheet" type="text/css" href="css/modelview.rcss" />
	<link rel="stylesheet" type="text/css" href="css/options/player.rcss" />
	<script src="as/modelview.as"></script>
	<script src="as/model_setup.as"></script>
	<script>
		ModelSetup mSetup;
		ElementOptionsForm @playerform;

		void onPlayerShow( Element @body, Event @evt )
		{
			onTemplateShow( body, evt );

			//==== form ====
			ElementOptionsForm @f = body.getElementById("player-options-form");
			f.storeOptions();
			@playerform = @f;

			@f = body.getElementById("hud-options-form");
			f.storeOptions();

			//==== model ====
			ModelSetup setup( "model-view", "model-skin", "model-color", "model", "cg_teamALPHAmodel", "skin", "cg_teamALPHAskin", "color", "cg_teamALPHAcolor", false );
			setup.InitializeModelSetup( @body );

			mSetup = setup;	

			animationsOnShow();
		}
				
	</script>
</head>
<body template="porkui" onshow="$onPlayerShow">

	<!-- divide the screen to two vertical contexts -->
	<div id="sidebar">
		<div id="sidebar2">
			<!-- options navigation -->
			<a href="#" onclick="animOpenMenu('options_player.rml');">Player</a>
			<a href="#" onclick="animOpenMenu('options_video.rml');">Video</a>
			<a href="#" onclick="animOpenMenu('options_audio.rml');">Audio</a>
			<a href="#" onclick="animOpenMenu('options_input.rml');">Input</a>
			<br />
			<hr class="nicehr"/>
			<br />
			<a href="#" onclick="animOpenMenu('options_input_race.rml');">MGXRace settings</a>
		</div>
	</div>
	
	<div id="leftside">
	
		<!-- player setup -->
		<div id="player-setup">
			<tabset>	
				<tab class="side-tab">Model</tab>		
				<panel class="dropshadow">
				
					<div class="model-view-content">


						<div class="left-arrow" onclick="mSetup.SelectPrevModel(self);">
							<div class="left-arrow-gfx"></div>
						</div>
						<div class="right-arrow" onclick="mSetup.SelectNextModel(self);">
							<div class="right-arrow-gfx"></div>
						</div>
						<modelview id="model-view" class="model-view">
							<!-- magic modelview is magic -->
						</modelview>
					</div>
					<optionsform id="player-options-form" onsubmit="$OptionsForm_OnSubmit">
						<div class="title">Name</div>
						<input cvar="name" type="text" value="player"/>
						<br/>		

						<colorselector id="model-color" cvar="color" onclick="mSetup.SetColor(self);">
							<color rgb="#910000" /> <color rgb="#ff0000" />
							<color rgb="#963f00" /> <color rgb="#ff6a00" />
							<color rgb="#ffff00" /> <color rgb="#00ff00" />
							<color rgb="#008000" /> <color rgb="#00ffff" />
							<color rgb="#0050a6" /> <color rgb="#0000ff" />
							<color rgb="#5b00b5" /> <color rgb="#ff00ff" />
							<color rgb="#ff87f7" /> <color rgb="#5e5e5e" />
							<color rgb="#ffffff" /> <color />
						</colorselector>
						<br/>
						<br/>
						
						<hr class="nicehr"/>
						<br/>
						
						<div class="title">Fullbright skin</div>
						<input id="model-skin" type="checkbox" onchange="mSetup.SetSkin(self);"/>
						<br/>
						
						<br/>

						<button onclick="playerform.restoreOptions();mSetup.Reset(self);" class="button-cancel">Cancel</button>
						<button onclick="playerform.applyOptions();mSetup.Fix(self);notificationPopup('Saved');" class="button-apply">Save changes</button>
					</optionsform>

				</panel>

				<tab class="side-tab">HUD</tab>		
				<panel class="dropshadow">
					<optionsform id="hud-options-form" onsubmit="$OptionsForm_OnSubmit">
						<div class="title">Crosshair</div>
						<dataspinner id="crosshair" cvar="cg_crosshair" source="crosshair.list" fields="image" valuefield="index" formatter="crosshair" realtime="1"/>
						<br/>

						<div class="title">Weapon handedness</div>
						<select cvar="hand" realtime="1">
							<option value="0" selected>right</option>
							<option value="1">left</option>
							<option value="2">center</option>
						</select>						
					
						<hr class="nicehr"/>
						<br/>

						<div class="title">FOV</div>
						<input cvar="fov" type="text" class="short text" value="100" realtime="1"/>
						<br/>
					
						<div class="title">FOV while using zoom</div>
						<input cvar="zoomfov" type="text" class="short text" value="40" realtime="1"/>
						<br/>
						
						<hr class="nicehr" />
						<br/>
						
						<div class="title">Simple items</div>
						<input cvar="cg_simpleItems" type="checkbox" realtime="1"/>
						<br/>

						<div class="title">Show help</div>
						<input cvar="cg_showHelp" type="checkbox" realtime="1"/>
						<br/>

						<div class="title">Show gun model</div>
						<input cvar="cg_gun" type="checkbox" realtime="1"/>
						<br/>
						
						<div class="title">Gun alpha</div>
						<input cvar="cg_gun_alpha" class="slider" type="range" min="0" max="1" step="0.1" value="0" realtime="1"/>
						<br/>
						
						<div class="title">Show FPS counter</div>
						<input cvar="cg_showFps" type="checkbox" realtime="1"/>
						<br/>
						
						<div class="title">Show damage indicator</div>
						<input cvar="cg_damage_indicator" type="checkbox" realtime="1"/>
						<br/>
					</optionsform>
				</panel>
			
			</tabset>
		</div>
	</div>
	
</body>
</rml>
